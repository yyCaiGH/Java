package com.up.infant.model;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.up.common.base.ComParams;
import com.up.common.utils.Sql;
import com.up.common.utils.TextUtils;
import com.up.infant.model.base.BaseArticle;
import com.up.infant.task.RecommendTask;

import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Article extends BaseArticle<Article> {
    public static final Article dao = new Article();

    public static final String table = "t_article t_article";
    public static final String id = "t_article.id";
    public static final String mId = "t_article.member_id";
    public static final String content = "t_article.content";
    public static final String imgUrl = "t_article.img_url";
    public static final String pageView = "t_article.page_view";
    public static final String likeCount = "t_article.like_count";
    public static final String comment = "t_article.comment";
    public static final String createTime = "t_article.create_time";
    public static final String isTop = "t_article.is_top";//,1为置顶，0不置顶
    public static final String topTime = "t_article.top_time";
    public static final String isRecommend = "t_article.is_recommend";
    public static final String recommendTime = "t_article.recommend_time";
    public static final String status = "t_article.status";
    public static final String from = "t_article.from";
    public static final String brand1 = "t_article.brand1";
    public static final String brand2 = "t_article.brand2";
    public static final String brand3 = "t_article.brand3";
    public static final String brand4 = "t_article.brand4";
    public static final String brand5 = "t_article.brand5";
    public static final String brand6 = "t_article.brand6";
    public static final String tags = "t_article.tags";


    public void addPageView(int articleId) {
        String sql = "update t_article set page_view =page_view+1 where id=" + articleId;
        Db.update(sql);
    }

    public void addComment(int articleId, int type) {
        String sql;
        if (type == 0) {//点赞数量加1
            sql = "update t_article set like_count =like_count+1 where id=" + articleId;
        } else {//评论数量加1
            sql = "update t_article set comment =comment+1 where id=" + articleId;
        }
        Db.update(sql);


    }

    /**
     * 获取文章列表，先置顶，再推荐，再按时间
     *
     * @param pageSize
     * @param pageNo
     * @return
     */
    public Page<Article> getArticles(int pageSize, int pageNo,String memberId) {
        String select="SELECT t_article.* ,t_concern.id AS follow,t_comment.id AS isLike,t_member.nickname,t_member.heart_img_url";
        String sql=" FROM t_article t_article" +
                " LEFT JOIN t_concern t_concern ON t_concern.to_member_id=t_article.member_id AND t_concern.from_member_id=" +memberId+
                " LEFT JOIN t_comment t_comment ON t_comment.article_id=t_article.id AND t_comment.type=0 AND t_comment.member_id="+memberId+
                " LEFT JOIN t_member t_member ON t_member.id=t_article.member_id"+
                " WHERE t_article.status=0 " +
                " GROUP BY t_article.`id` " +
                " ORDER BY t_article.is_top DESC ,t_article.is_recommend DESC,t_article.create_time DESC";
        return paginate(pageNo, pageSize,true, select, sql);
    }

    public Page<Article> getMemberArticles(int pageSize, int pageNo,int memberId,int userId) {
        String select="SELECT t_article.* ,t_concern.id AS follow,t_comment.id AS isLike,t_member.nickname,t_member.heart_img_url";
        String sql=" FROM t_article t_article" +
                " LEFT JOIN t_concern t_concern ON t_concern.to_member_id=t_article.member_id AND t_concern.from_member_id=" +userId+
                " LEFT JOIN t_comment t_comment ON t_comment.article_id=t_article.id AND t_comment.type=0 AND t_comment.member_id="+userId+
                " LEFT JOIN t_member t_member ON t_member.id=t_article.member_id"+
                " WHERE t_article.status=0 and t_article.member_id="+memberId +
                " GROUP BY t_article.`id` " +
                " ORDER BY t_article.create_time DESC ";
        return paginate(pageNo, pageSize,true, select, sql);
    }

    /**
     * 获取某个人的文章
     *
     * @param pageSize
     * @param pageNo
     * @param memberId
     * @return
     */
    public Page<Article> getArticles(int pageSize, int pageNo, int memberId) {
        String sql =
                " FROM t_article WHERE t_article.status=0 and member_id=" + memberId +
                        " ORDER BY t_article.create_time DESC";
        return paginate(pageNo, pageSize, "SELECT t_article.*", sql);
    }

    /**
     * 置顶，取消置顶
     *
     * @param articleId
     */
    public void top(int articleId) {
        Article article = findById(articleId);
        article.setIsTop(!article.getIsTop());
        if (article.getIsTop()) {
            article.setTopTime(new Date());
        }
        else{
            article.setTopTime(null);
        }
        article.update();
    }

    /**
     * 推荐，回归不推荐
     *
     * @param articleId
     */
    public void recommend(int articleId) {
        Article article = findById(articleId);
        if (article.getIsRecommend()) {
            article.setIsRecommend(false);
            article.setRecommendTime(null);
        } else {
            article.setIsRecommend(true);
            article.setRecommendTime(new Date());
            RecommendTask task = new RecommendTask(articleId);
            Timer timer = new Timer();
            timer.schedule(task, RecommendTask.delay);
        }
        article.update();
    }

    public void updateSta(int articleId) {
        Article article = findById(articleId);
        article.setStatus(article.getStatus() == 0 ? 1 : 0);
        article.update();
        if(article.getStatus()==1){//隐藏文章，需要提醒用户
            SysMessage sysMessage = new SysMessage();
            sysMessage.setContent("您的文章编号："+article.getId()+"，已被删除");
            sysMessage.setTitle("文章删除");
            sysMessage.setCreateTime(new Date());
            sysMessage.setType(1);
            sysMessage.save();

            MemberMessage memberMessage = new MemberMessage();
            memberMessage.setMemberId(article.getMemberId());
            memberMessage.setMsgId(sysMessage.getId());
            memberMessage.setIsRead(0);
            memberMessage.save();
        }
    }

    public Page<Article> getArticle(ComParams params) {
        String select = Sql.select(id, mId,createTime, from, content, imgUrl, pageView, likeCount, comment, status, isTop,topTime,isRecommend, recommendTime, status, Member.nickname, Member.face);
        String where=Sql.from(table)+" left join "+Member.table+" on "+Member.id+"="+mId+
                " where 1=1";
        if (!TextUtils.isEmpty(params.getStartTime())){
            where+=(" and "+ createTime+" >='"+params.getStartTime()+"'");
        }
        if (!TextUtils.isEmpty(params.getEndTime())){
            where+=(" and "+ createTime+" <='"+params.getStartTime()+"'");
        }
        if (params.getType()==1){//置顶
            where+=(" and "+ isTop+" =1");
        }else if (params.getType()==2){
            where+=(" and "+ isRecommend+" =1");
        }else if (params.getType()==3){
            where+=(" and "+ status+" =1");
        }else {

        }
        where+=Sql.orderBy(createTime,false);
        return paginate(params.getPageNo(),params.getPageSize(),select,where);
   }

   public Article article(int id,int memberId){
       String select="SELECT t_article.* ,t_concern.id AS follow,t_comment.id AS isLike,t_member.nickname,t_member.heart_img_url";
       String sql=" FROM t_article t_article" +
               " LEFT JOIN t_concern t_concern ON t_concern.to_member_id=t_article.member_id AND t_concern.from_member_id=" +memberId+
               " LEFT JOIN t_comment t_comment ON t_comment.article_id=t_article.id AND t_comment.type=0 AND t_comment.member_id="+memberId+
               " LEFT JOIN t_member t_member ON t_member.id=t_article.member_id"+
               " WHERE t_article.status=0 and t_article.id="+id ;
       return findFirst(select+sql);
   }
}

