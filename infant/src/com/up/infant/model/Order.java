package com.up.infant.model;

import com.jfinal.plugin.activerecord.Page;
import com.sun.org.apache.xpath.internal.operations.Or;
import com.up.common.utils.TextUtils;
import com.up.infant.model.base.BaseOrder;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Order extends BaseOrder<Order> {
	public static final Order dao = new Order();


	public Long getCountBySta(int memberId,int orderSta){
		String sql="SELECT COUNT(*) as count FROM t_order WHERE member_id= "+memberId+" AND STATUS="+orderSta;
		Order order=findFirst(sql);
		return order.getLong("count");
	}

	public Page<Order> getPage(int pageNo,int pageSize,int memberId,Integer status){
		String select="SELECT t_order.*";
		String where="FROM t_order t_order\n" +
                "WHERE t_order.`member_id`= "+memberId;
        if (null!=status){
            where+=" and t_order.`status`="+status;
        }
        where+=" ORDER BY t_order.`time_create` DESC";
		return paginate(pageNo,pageSize,true,select,where);
	}

	/**
	 *
	 * @return
	 */
	public Order getOrder(int orderId){
		String select = "SELECT t.*,m.nickname,m.phone As user_phone,mc.cdkey,c.title,vg.name As grade_name,m.consume_amount";
		String sqlExceptSelect = " from t_order AS t"+
				" LEFT JOIN t_member AS m ON m.id = t.member_id"+
				" LEFT JOIN t_vip_grade AS vg ON vg.id = m.vip_grade_id"+
				" LEFT JOIN t_member_coupon AS mc ON mc.id = t.member_coupon_id"+
				" LEFT JOIN t_coupon AS c ON c.id = mc.coupon_id"+
				" WHERE t.id="+orderId;
		String sql = select+sqlExceptSelect;
		return findFirst(sql);
	}

	public Order getOrderInfo(int orderId,int memberId){
		String select="SELECT t_order.*";
		String where="FROM t_order t_order\n" +
				"WHERE t_order.`member_id`= "+memberId +"";
			where+=" and t_order.`id`="+orderId;
		return findFirst(select+where);
	}

	/**
	 * 订单号获取订单
	 * @param orderSn
	 * @return
	 */
	public Order getOrderBySn(String orderSn){
		String select="SELECT t_order.*";
		String where="FROM t_order t_order\n" +
				"WHERE t_order.`serial_number`= "+orderSn +"";
		return findFirst(select+where);
	}
	/**
	 * 搜索
	 * @param isReturns
	 * @param order
	 * @param searchValue //包括昵称，手机号，订单编号
	 * @param minTime
	 * @param maxTime
	 * @param pageNo
	 * @param pageSize   @return
	 */
    public Page<Order> getPageList(Boolean isReturns, Order order, String searchValue, String minTime, String maxTime, int pageNo, int pageSize) {
		String select = "SELECT t.*,m.nickname,m.phone";
		String sqlExceptSelect = "from t_order AS t"+
				" LEFT JOIN t_member AS m ON m.id = t.member_id"+
				" WHERE 1=1";
		if (order.getStatus() != null) {
			sqlExceptSelect += " AND t.status=" + order.getStatus();
		}
		if (order.getStatusReturns() != null) {
			if (order.getStatusReturns()==4) {
				sqlExceptSelect += " AND t.status_returns=4";
			}
			else if(order.getStatusReturns()==0){
				sqlExceptSelect += " AND t.status_returns<4";
			}
		}
		if (order.getMemberId() != null) {
			sqlExceptSelect += " AND t.member_id=" + order.getMemberId();
		}
		if (order.getFrom() != null) {
			sqlExceptSelect += " AND t.from=" + order.getFrom();
		}
		if (!TextUtils.isEmpty(searchValue)){
			sqlExceptSelect += " AND (t.serial_number='" + searchValue+"' OR m.nickname='"+searchValue+"' OR m.phone='"+searchValue+"')";
		}
		if (!TextUtils.isEmpty(minTime)){
			if (isReturns!=null && isReturns){
				sqlExceptSelect += " AND t.time_returns_agree>='" + minTime + "'";
			}
			else {
				sqlExceptSelect += " AND t.time_create>='" + minTime + "'";
			}
		}
		if (!TextUtils.isEmpty(maxTime)){
			if (isReturns!=null && isReturns){
				sqlExceptSelect += " AND t.time_returns_agree<='" + maxTime + "'";
			}
			else {
				sqlExceptSelect += " AND t.time_create<='" + maxTime + "'";
			}
		}
		sqlExceptSelect += " order by t.id DESC";
		return paginate(pageNo, pageSize, select, sqlExceptSelect);

    }
}
