package com.up.infant.model;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.up.common.utils.TextUtils;
import com.up.infant.model.base.BaseSkuGoods;
import com.up.infant.model.params.RepertoryParams;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class SkuGoods extends BaseSkuGoods<SkuGoods> {
	public static final SkuGoods dao = new SkuGoods();

	public void addBatch(List<SkuGoods> skuList){
		Db.batchSave(skuList,skuList.size());
	}
	public void updateBatch(List<SkuGoods> skuList){
		Db.batchUpdate(skuList,skuList.size());
	}
	public List<SkuGoods> getList(SkuGoods skuGoods) {
		String sql = "select t.*, s1.name AS sku1_name,s1.parent_id AS sku1_parent,s2.name AS sku2_name,s2.parent_id AS sku2_parent, s3.name AS sku3_name,s3.parent_id AS sku3_parent" +
				" from t_sku_goods AS t"+
				" LEFT JOIN t_sku AS s1 ON t.sku1_id= s1.id"+
				" LEFT JOIN t_sku AS s2 ON t.sku2_id= s2.id"+
				" LEFT JOIN t_sku AS s3 ON t.sku3_id= s3.id"+
				" where 1=1";
		if (skuGoods.getGoodsId()!=null){
			sql +=" AND t.goods_id="+skuGoods.getGoodsId();
		}
		sql +=" order by t.id asc";
		return dao.find(sql);
	}

	/**
	 * 根据品牌获取所有的skugoods
	 * @param brandId
	 * @return
	 */
	public List<SkuGoods> getListbyBrandId(int brandId) {
		String sql = "select t.*" +
				" from t_sku_goods AS t"+
				" LEFT JOIN t_goods AS g ON t.goods_id= g.id"+
				" LEFT JOIN t_brand AS b ON g.brand_id= b.id"+
				" where b.id="+brandId;
		return dao.find(sql);
	}
	/**
	 * 根据商品获取所有的skugoods
	 * @param goodsId
	 * @return
	 */
	public List<SkuGoods> getListbyGoodsId(int goodsId) {
		String sql = "select t.*" +
				" from t_sku_goods AS t"+
				" LEFT JOIN t_goods AS g ON t.goods_id= g.id"+
				" where g.id="+goodsId;
		return dao.find(sql);
	}
	public List<SkuGoods> getList(int goodsId) {
		String sql = "select * from t_sku_goods where goods_id="+goodsId;
		return dao.find(sql);
	}
	/**
	 * 根据条件获取实时库存列表
	 * @param bean
	 * @return
	 */
	public Page<SkuGoods> getRepertoryList(RepertoryParams bean) {
		String select = "SELECT sg.*,g.name,g.img1_url,b.name_zh,c1.cat_name AS one_cat_name,c2.cat_name AS tow_cat_name,g.main_number,"+
				"s1.name AS sku1_name,s2.name AS sku2_name,s3.name AS sku3_name";
		String sqlExceptSelect = "from t_sku_goods AS sg"+
				" LEFT JOIN t_goods AS g ON g.id = sg.goods_id"+
				" LEFT JOIN t_brand AS b ON g.brand_id = b.id"+
				" LEFT JOIN t_category AS c1 ON g.one_cat_id = c1.id"+
				" LEFT JOIN t_category AS c2 ON g.tow_cat_id = c2.id"+
				" LEFT JOIN t_sku AS s1 ON sg.sku1_id= s1.id"+
				" LEFT JOIN t_sku AS s2 ON sg.sku2_id= s2.id"+
				" LEFT JOIN t_sku AS s3 ON sg.sku3_id= s3.id"+
				" WHERE 1=1";
		if (bean.getPutaway()!=null){
			sqlExceptSelect +=" AND sg.putaway="+bean.getPutaway();
		}
		if (bean.getGoodsNumber()!=null){
			sqlExceptSelect +=" AND sg.goods_number="+bean.getGoodsNumber();
		}
		if (bean.getBrandsId()!=null){
			sqlExceptSelect +=" AND b.id="+bean.getBrandsId();
		}
		if (!TextUtils.isEmpty(bean.getGoodsName())){
			sqlExceptSelect +=" AND g.name like '%"+bean.getGoodsName()+"%'";
		}
		if (bean.getMinRepertory()!=null){
			sqlExceptSelect +=" AND sg.repertory>="+bean.getMinRepertory();
		}
		sqlExceptSelect +=" order by sg.id asc";
		return paginate(bean.getPageNo(), bean.getPageSize(), select, sqlExceptSelect);
	}

	public List<SkuGoods> goodsSku(int goodsId){
		String sql="SELECT t_sku_goods.*,\n" +
				"\tt_sku1.name AS name1,\n" +
				"\tt_sku2.name AS name2,\n" +
				"\tt_sku3.name AS name3,\n" +
				"\tt_sku4.name AS name4,\n" +
				"\tt_sku5.name AS name5,\n" +
				"\tt_sku6.name AS type_name1,\n" +
				"\tt_sku7.name AS type_name2,\n" +
				"\tt_sku8.name AS type_name3,\n" +
				"\tt_sku9.name AS type_name4,\n" +
				"\tt_sku0.name AS type_name5\n" +
				"FROM  t_sku_goods t_sku_goods\n" +
				"LEFT JOIN t_sku t_sku1 ON t_sku1.id=t_sku_goods.sku1_id\n" +
				"LEFT JOIN t_sku t_sku2 ON t_sku2.id=t_sku_goods.sku2_id\n" +
				"LEFT JOIN t_sku t_sku3 ON t_sku3.id=t_sku_goods.sku3_id\n" +
				"LEFT JOIN t_sku t_sku4 ON t_sku4.id=t_sku_goods.sku4_id\n" +
				"LEFT JOIN t_sku t_sku5 ON t_sku5.id=t_sku_goods.sku5_id\n" +
				"\t\n" +
				"\n" +
				"LEFT JOIN t_sku t_sku6 ON  t_sku6.id=t_sku1.parent_id\n" +
				"LEFT JOIN t_sku t_sku7 ON  t_sku7.id=t_sku2.parent_id\n" +
				"LEFT JOIN t_sku t_sku8 ON  t_sku8.id=t_sku3.parent_id\n" +
				"LEFT JOIN t_sku t_sku9 ON  t_sku9.id=t_sku4.parent_id\n" +
				"LEFT JOIN t_sku t_sku0 ON  t_sku0.id=t_sku5.parent_id\n" +
				"\n" +
				"WHERE t_sku_goods.goods_id="+goodsId+" and t_sku_goods.putaway=1";
		return find(sql);
	}

	/**
	 * 分页获取采购记录明细,未测试
	 * @param bean
	 * @return
	 */
	public Page<SkuGoods> getPurchaseDetailByPage(RepertoryParams bean) {
		String select = "SELECT sg.*,t.count,g.name,g.img1_url,b.name_zh,c1.cat_name AS one_cat_name,c2.cat_name AS tow_cat_name,g.main_number,"+
				"s1.name AS sku1_name,s2.name AS sku2_name,s3.name AS sku3_name";
		String sqlExceptSelect = "from t_purchase_details AS t"+
				" LEFT JOIN t_sku_goods AS sg ON sg.id = t.sku_goods_id"+
				" LEFT JOIN t_goods AS g ON g.id = sg.goods_id"+
				" LEFT JOIN t_brand AS b ON g.brand_id = b.id"+
				" LEFT JOIN t_category AS c1 ON g.one_cat_id = c1.id"+
				" LEFT JOIN t_category AS c2 ON g.tow_cat_id = c2.id"+
				" LEFT JOIN t_sku AS s1 ON sg.sku1_id= s1.id"+
				" LEFT JOIN t_sku AS s2 ON sg.sku2_id= s2.id"+
				" LEFT JOIN t_sku AS s3 ON sg.sku3_id= s3.id"+
				" WHERE t.purchase_id="+bean.getPurchaseId();
		sqlExceptSelect +=" order by sg.id DESC";
		return paginate(bean.getPageNo(), bean.getPageSize(), select, sqlExceptSelect);
	}
	/**
	 * 获取采购记录明细
	 * @return
	 */
	public List<SkuGoods> getPurchaseDetail(String id) {
		String select = "SELECT sg.*,t.count,g.name,g.img1_url,b.name_zh,c1.cat_name AS one_cat_name,c2.cat_name AS tow_cat_name,g.main_number,"+
				"s1.name AS sku1_name,s2.name AS sku2_name,s3.name AS sku3_name";
		String sqlExceptSelect = " from t_purchase_details AS t"+
				" LEFT JOIN t_sku_goods AS sg ON sg.id = t.sku_goods_id"+
				" LEFT JOIN t_goods AS g ON g.id = sg.goods_id"+
				" LEFT JOIN t_brand AS b ON g.brand_id = b.id"+
				" LEFT JOIN t_category AS c1 ON g.one_cat_id = c1.id"+
				" LEFT JOIN t_category AS c2 ON g.tow_cat_id = c2.id"+
				" LEFT JOIN t_sku AS s1 ON sg.sku1_id= s1.id"+
				" LEFT JOIN t_sku AS s2 ON sg.sku2_id= s2.id"+
				" LEFT JOIN t_sku AS s3 ON sg.sku3_id= s3.id"+
				" WHERE t.purchase_id="+id;
		sqlExceptSelect +=" order by sg.id DESC";

		return find(select+sqlExceptSelect);
	}

	/**
	 * 通过ID跟商品Id查询sku是否存在
	 * @param id
	 * @param goodsId
	 * @return
	 */
	public boolean getByGoodsIdAndId(int id,int goodsId){
		String sql="SELECT COUNT(*) FROM t_sku_goods WHERE id="+id+" AND goods_id="+goodsId+" AND putaway=1";
		Long count=findFirst(sql).getLong("COUNT(*)");
		if (count>0){
			return true;
		}else {
			return false;
		}
	}

	public SkuGoods getSkuGoodsInfo(int skuGoodsId){
		String sql="SELECT t_sku_goods.*,\n" +
				"t_sku1.name AS name1,\n" +
				"t_sku2.name AS name2,\n" +
				"t_sku3.name AS name3,\n" +
				"t_sku4.name AS name4,\n" +
				"t_sku5.name AS name5,\n" +
				"t_sku6.name AS type_name1,\n" +
				"t_sku7.name AS type_name2,\n" +
				"t_sku8.name AS type_name3,\n" +
				"t_sku9.name AS type_name4,\n" +
				"t_sku0.name AS type_name5\n" +
				"FROM  t_sku_goods t_sku_goods\n" +
				"LEFT JOIN t_sku t_sku1 ON t_sku1.id=t_sku_goods.sku1_id\n" +
				"LEFT JOIN t_sku t_sku2 ON t_sku2.id=t_sku_goods.sku2_id\n" +
				"LEFT JOIN t_sku t_sku3 ON t_sku3.id=t_sku_goods.sku3_id\n" +
				"LEFT JOIN t_sku t_sku4 ON t_sku4.id=t_sku_goods.sku4_id\n" +
				"LEFT JOIN t_sku t_sku5 ON t_sku5.id=t_sku_goods.sku5_id\n" +
				"LEFT JOIN t_sku t_sku6 ON  t_sku6.id=t_sku1.parent_id\n" +
				"LEFT JOIN t_sku t_sku7 ON  t_sku7.id=t_sku2.parent_id\n" +
				"LEFT JOIN t_sku t_sku8 ON  t_sku8.id=t_sku3.parent_id\n" +
				"LEFT JOIN t_sku t_sku9 ON  t_sku9.id=t_sku4.parent_id\n" +
				"LEFT JOIN t_sku t_sku0 ON  t_sku0.id=t_sku5.parent_id\n" +
				"where t_sku_goods.`id`="+skuGoodsId;
		return findFirst(sql);
	}
}
